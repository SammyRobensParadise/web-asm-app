<div class="calculator">
<div class="container">
    <div class="input-group mb-3">
  <div class="input-group-prepend">
    <span class="input-group-text">$</span>
  </div>
<input @bind="CurrentValue" type="number" placeholder="enter price" />
  <div class="input-group-append">
    <span class="input-group-text">.00</span>
  </div>
</div>
<button type="button" class="btn btn-primary" id="run-calculation" @onclick="calculateRatio">Calculate your @name ratio</button>
@if(hasResults){
    <br>
<div class="jumbotron jumbotron-fluid">
  <div class="container">
    <h1 class="display-4">@result</h1>
    @if(isValidInput){
     <p class="lead">You can get @result @name<span>s</span>.</p>
    }
  </div>
</div>
@if(isValidInput){
<div class="container">
<table class="table">
  <thead>
    <tr>
      <th scope="col">Data</th>
      <th scope="col">Results</th>
      <th scope="col">Units</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th scope="row">Calories</th>
      <td>@calorieResults</td>
      <td>Calorie</td>
    </tr>
    <tr>
      <th scope="row">Meters</th>
      <td>Jacob</td>
      <td>Thornton</td>
    </tr>
    <tr>
      <th scope="row">Kilograms</th>
      <td>Larry</td>
      <td>the Bird</td>
    </tr>
  </tbody>
</table>
</div>
}
}
</div>

</div>
@code{
  [Parameter]
      public double price { get; set; }
      [Parameter]
      public string name { get; set; }
      private double CurrentValue { get; set; }
      private double total { get; set; }
      private bool hasResults { get; set; } = false;
      private bool isValidInput { get; set; } = false;
      private string result { get; set; } = "";

      private string calorieResults { get; set; } = "";
      private int shawarmaCalories { get; set; } = 1215;
      private double shawaramaGramsFat { get; set; } = 73;
      private int falafelCalories { get; set; } = 750;
      private int falafelGramsFat { get; set; } = 30;
      private double length { get; set; } = 0.2032;
      private void calculateRatio()
      {
          if (CurrentValue < 0)
          {
              result = "Your price cannot be less than 0";
              hasResults = true;
              isValidInput = false;
          }
          else
          {

              double r = Math.Round(CurrentValue / price, 2, MidpointRounding.ToEven);
              calorieResults = determineCalories(r);
              string s = Convert.ToDecimal(r).ToString("#,##0.00");
              result = s;
              hasResults = true;
              isValidInput = true;
          }
      }

      private string determineCalories(double result)
      {
          if (name == "Shawarma")
          {
              double calorieResults = result * shawarmaCalories;
              string s = Convert.ToDecimal(calorieResults).ToString("#,##0.00");
              return s;
          }
          else
          {
              double calorieResults = result * falafelCalories;
              string s = Convert.ToDecimal(calorieResults).ToString("#,##0.00");
              return s;
          }
      }
}